enumerate()

每次循环中同时得到下标和元素：

S = 'abcdefghijk'
for （index, char） in enumerate(S):
    print index
    print char



字典循环：
dic = {'a':12, 'b':13}
for (k, v) in dic.items():
    print k
    print v


包裹位置传递：

def func(*name):
    print type(name)
    print name


func(1, 4, 6)            #参数被name搜集，合为一个元组
func(5, 6, 7, 1, 2, 3)   #

包裹关键字传递：
def func(**dict):
    print type(dict)
    print dict

func(a = 1, b = 9)
func(m = 2, n = 1, c = 11)    #dict 是一个字典类型的，


解包裹：
def func(a, b, c):
    print a, b, c

m = ('test', 'dsf', 'er')

func(*m)



循环对象，  next（）方法

循环对象是这样一个对象，它包含有一个next()方法(__next__()方法，在python 3x中)， 这个方法的目的是进行到下一个结果，而在结束一系列结果之后，举出StopIteration错误。

生成器
表理解    L = [x**2 for x in range(10)] 动态生成list


lambda x, y: x + y

map()函数
re = map((lambda x: x + 1), [1, 2, 4])
则返回的re为[2, 4, 6]它是将后边的list一次调用前边的函数操作，返回list
可以有多个参数，如
re = map((lambda x, y: x +　y), [1, 4, 6], [2, 5, 8])
则返回re＝［３，　９，　１４］它是对后边的每个list中取一个进行函数操作，因此函数参数个数与list的个数相同。最后返回list

filter()函数
筛选list中的数据,第一个参数依然是函数对象。该函数返回bool值，确定该值是不是满足条件。
如def func(a):
      if a > 100:
         return True
      else:
         return False
print filter(func, [10, 56, 101, 500])。该函数会将满足func的数据筛选出来，


reduce（）函数
reduce返回一个数，函数对象拥有两个参数，是将list中的数字依次传入，将结果作为函数对象的第一个参数，将list的下一个作为第二个参数，继续运算。

如
b = reduce((lambda x, y: x + y), [3, 9, 14])
最终返回26